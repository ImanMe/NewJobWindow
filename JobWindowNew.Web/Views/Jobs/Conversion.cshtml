
@model PagedList.IPagedList<JobWindowNew.Domain.ViewModels.JobGridViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<div class="row">
    @*<label style="font-size: medium; margin-left: 25px;" class="label label-warning">Conversion Sort</label>*@
    <h4 style="margin-left: 20px;" class="pull-left">Conversion Sort</h4>
    <div class="pull-left">
        @*<div style="margin-left: 20px;" class="dropdown">
            <button class="btn btn-default backtolist-btn dropdown-toggle" type="button" data-toggle="dropdown">
                Sort Order
            </button>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("Index", "Jobs")">Default</a></li>
                <li><a href="@Url.Action("Volume", "Jobs")">Volume</a></li>
                <li><a href="@Url.Action("Conversion", "Jobs")">Conversion</a></li>
            </ul>
        </div>*@
    </div>
    <div class="pull-right">       
        <button class="btn btn-warning duplicate-btn" onclick="location.href = '@Url.Action("Index", "Jobs")'">Job List</button>
        <button class="btn btn-warning duplicate-btn" onclick="location.href = '@Url.Action("Duplicates", "Jobs")'">Show Duplicates</button>        
        <button class="btn btn-warning createNew-btn" onclick="location.href = '@Url.Action("Create", "Jobs")'">Create New</button>
    </div>
</div>
@using (Html.BeginForm("Conversion", "Jobs", FormMethod.Get))
{
    @*<p>
            Find by Id: @Html.TextBox("idSearch", ViewBag.IdFilter as string)
            Find by Title: @Html.TextBox("titleSearch", ViewBag.TitleFilter as string)
            <input type="submit" value="Search"/>
        </p>*@

    <div class="tablewrap">
        <table class="table table-condensed table-hover jobtable">
            <thead>
            <tr>
                <th colspan="4" class="text-center">Actions</th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.IdParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">ID<i class="glyphicon glyphicon-sort"></i></a></th>
                <th>Status</th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CloneFromParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">CL<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.EverGreenIDParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">EG<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.SchedulingPodParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Pod<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.OfficeParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Office<i class="glyphicon glyphicon-sort"></i></a></th>
                <th style="min-width: 100px;"><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.TitleParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Title<i class="glyphicon glyphicon-sort"></i></a><span title="Expand" style="padding: 0 3px; font-size: smaller; float: right" class="btn btn-primary" id="titleButton"><i class="glyphicon glyphicon-resize-horizontal"></i></span></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.JobBoardParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Job Board<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.DivisionParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">DIV<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CityParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">City<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.StateNameParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">State<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CountryNameParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Country<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CategoryNameParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Category<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CompanyNameParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Company<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.ApsClParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">ApsCl<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.BobParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">BOB<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.Intvs2Parm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">2nds<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.IntvsParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Intvs<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.ActivationDateParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Activation<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.ExpirationDateParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Expiration<i class="glyphicon glyphicon-sort"></i></a></th>
                <th style="min-width: 100px;"><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CreatedByParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">CreatedBy<i class="glyphicon glyphicon-sort"></i></a><span title="Expand" style="padding: 0 3px; font-size: smaller; float: right" class="btn btn-primary" id="createdButton"><i class="glyphicon glyphicon-resize-horizontal"></i></span></th>
                <th><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.CreatedDateParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Created<i class="glyphicon glyphicon-sort"></i></a></th>
                <th><a href="#">ActiveFor</a></th>
                <th style="min-width: 100px;"><a href="@Url.Action("Conversion", new {sortOrder = ViewBag.EmailParm, idFilter = ViewBag.IdFilter, titleFilter = ViewBag.TitleFilter, podIdFilter = ViewBag.PodIdFilter, jobBoardFilter = ViewBag.JobBoardFilter, cityFilter = ViewBag.CityFilter, countryFilter = ViewBag.CountryFilter, stateFilter = ViewBag.StateFilter, companyFilter = ViewBag.CompanyFilter, categoryFilter = ViewBag.CategoryFilter, divisionFilter = ViewBag.DivisionFilter, statusFilter = ViewBag.StatusFilter})">Email<i class="glyphicon glyphicon-sort"></i></a><span title="Expand" style="padding: 0 3px; font-size: smaller; float: right" class="btn btn-primary" id="emailButton"><i class="glyphicon glyphicon-resize-horizontal"></i></span></th>
                <th style="min-width: 100px;"><a href="#">OnlineUrl</a><span title="Expand" style="padding: 0 3px; font-size: smaller; float: right" class="btn btn-primary" id="urlButton"><i class="glyphicon glyphicon-resize-horizontal"></i></span></th>
            </tr>
            <tr class="inputtr">
                <th colspan="4" class=""><button class="btn btn-primary btnsearch" type="submit"><i class="glyphicon glyphicon-search"></i> Search</button></th>
                <th>@Html.TextBox("idSearch", ViewBag.IdFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("statusSearch", ViewBag.StatusFilter as string, new {@class = "form-control"})</th>
                <th></th>
                <th></th>
                <th>@Html.TextBox("podIdSearch", ViewBag.PodIdFilter as string, new {@class = "form-control"})</th>
                <th></th>
                <th>@Html.TextBox("titleSearch", ViewBag.TitleFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("jobBoardSearch", ViewBag.JobBoardFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("divisionSearch", ViewBag.DivisionFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("citySearch", ViewBag.CityFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("stateSearch", ViewBag.StateFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("countrySearch", ViewBag.CountryFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("categorySearch", ViewBag.CategoryFilter as string, new {@class = "form-control"})</th>
                <th>@Html.TextBox("companySearch", ViewBag.CompanyFilter as string, new {@class = "form-control"})</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var job in Model)
            {
                <tr class="">
                    <td colspan="4" class="btnactions text-center">
                        <a title="Edit" class="btn btn-default" href="@Url.Action("Edit", new {@id = job.Id})">
                            <i class="glyphicon glyphicon-pencil"></i>
                        </a>
                   
                        <a title="Clone" target="_blank" class="btn btn-default" href="@Url.Action("Clone", new {@id = job.Id})">
                            <i class="glyphicon glyphicon-repeat"></i>
                        </a>
                   
                        @if (job.IsExpired)
                        {
                            <a title="Expire" disabled="disabled" onclick="return alert('This job is already expired!');" class="btn btn-default deleteButton" , href="#">
                                <i class="glyphicon glyphicon-remove"></i>
                            </a>
                        }
                        else
                        {
                            <a title="Expire" class="btn btn-default action3 Expire" href="#">
                                <i class="glyphicon glyphicon-remove" data-job-id="@job.Id"></i>
                            </a>
                        }
                   
                        <a title="Delete" class="btn btn-default action4 Delete" href="#">
                            <i class="glyphicon glyphicon-trash" data-job-id="@job.Id"></i>
                        </a>
                    </td>
                    <td class="">
                        @Html.DisplayFor(m => job.Id)
                    </td>
                    <td class="">@if (job.IsExpired)
                                 {
                                     <span class="label label-danger">Expired</span>
                                 }
                                 else
                                 {
                                     <span class="label label-success text-right">Active</span>
                                 }</td>
                    <td class="">@Html.DisplayFor(m => job.CloneFrom)</td>
                    <td class="">@Html.DisplayFor(m => job.EverGreenId)</td>
                    <td class="">@Html.DisplayFor(m => job.SchedulingPod)</td>
                    <td class="">@Html.DisplayFor(m => job.OfficeId)</td>
                    <td id="fullTitle" class="titlec displayNone">@Html.DisplayFor(m => job.Title)</td>
                    <td class="halfTitle"><a id="titleLink" href="#" title="@Html.DisplayFor(m => job.Title)">@Html.DisplayFor(m => job.TitleTruncated)</a></td>
                    <td class="">@Html.DisplayFor(m => job.JobBoard)</td>
                    <td class="">@Html.DisplayFor(m => job.Division)</td>
                    <td class="">@Html.DisplayFor(m => job.City)</td>
                    <td class="">@Html.DisplayFor(m => job.StateName)</td>
                    <td class="">@Html.DisplayFor(m => job.CountryName)</td>
                    <td class="">@Html.DisplayFor(m => job.Category)</td>
                    <td class="">@Html.DisplayFor(m => job.CompanyName)</td>
                    <td class="">@Html.DisplayFor(m => job.ApsCl)</td>
                    <td class="">@Html.DisplayFor(m => job.Bob)</td>
                    <td class="">@Html.DisplayFor(m => job.Intvs2)</td>
                    <td class="">@Html.DisplayFor(m => job.Intvs)</td>
                    <td class="">@Html.DisplayFor(m => job.ActivationDate)</td>
                    <td class="">@Html.DisplayFor(m => job.ExpirationDate)</td>
                    <td id="fullCreatedBy" class="createdc displayNone">@Html.DisplayFor(m => job.CreatedBy)</td>
                    <td class="halfCreatedBy"><a id="createdByLink" href="#" title="@Html.DisplayFor(m => job.CreatedBy)">@Html.DisplayFor(m => job.CreatedByTruncated)</a></td>
                    <td class="">@Html.DisplayFor(m => job.CreatedDate)</td>
                    <td class="">@Html.DisplayFor(m => job.NumberOfActiveDays)</td>
                    <td id="fullEmail" class="emailt displayNone">@Html.DisplayFor(m => job.EmailTo)</td>
                    <td class="halfEmail">@Html.DisplayFor(m => job.EmailToTruncated)</td>
                    @if (!job.IsOnlineApply)
                    {
                        <td></td>}
                    else
                    {
                        <td id="fullUrl" class="urlu displayNone"><a target="blank" href="http://board.thejobwindow.com/home/onlineapply/@Html.DisplayFor(m => job.Id)">http://board.thejobwindow.com/home/onlineapply/@Html.DisplayFor(m => job.Id)</a></td>
                        <td class="halfUrl"><a target="blank" href="http://board.thejobwindow.com/home/onlineapply/@Html.DisplayFor(m => job.Id)">http://board.thejob</a></td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
}
<div class="customePager">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    <div class="text-center">
        @Html.PagedListPager(Model, page => Url.Action("Conversion",
            new
            {
                page,
                titleFilter = ViewBag.TitleFilter,
                ViewBag.IdFilter,
                ViewBag.PodIdFilter,
                ViewBag.CityFilter,
                ViewBag.StateFilter,
                ViewBag.CountryFilter,
                ViewBag.CategoryFilter,
                ViewBag.DivisionFilter,
                ViewBag.JobBoardFilter,
                ViewBag.CompanyFilter,
                ViewBag.StatusFilter,
                sortOrder = ViewBag.CurrentSort
            }))
    </div>
</div>

@section Scripts{
    <script>

        $(document).ready(function() {
            $("#titleButton").click(function () {
                $(".titlec.displayNone").toggle();
                $(".halfTitle").toggle();
            });
        });
        $(document).ready(function () {
            $("#createdButton").click(function () {
                $(".createdc.displayNone").toggle();
                $(".halfCreatedBy").toggle();
            });
        });
        $(document).ready(function() {
            $("#emailButton").click(function () {
                $(".emailt.displayNone").toggle();
                $(".halfEmail").toggle();
            });
        });
        $(document).ready(function() {
            $("#urlButton").click(function () {
                $(".urlu.displayNone").toggle();
                $(".halfUrl").toggle();
            });
        });

        $(document).ready(function() {
            $(".Expire").click(function(e) {

                var link = $(e.target);
                var baseUrl = "@Url.Action("Expire", "Jobs")/";
                bootbox.dialog({
                    title: "Confirm",
                    message: "Are you sure you want to expire this job?",
                    buttons: {
                        no: {
                            label: 'No',
                            className: 'btn-default',
                            callback: function() {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: 'Yes',
                            className: 'btn-danger',
                            callback: function() {
                                $.ajax({
                                        url: baseUrl + link.attr("data-job-id"),
                                        method: "POST",
                                        async: true
                                    })
                                    .done(function() {
                                        link.closest("a").fadeOut(function() {
                                            $(this).attr('disabled', 'disabled');
                                        });
                                    })
                                    .fail(function() {
                                        alert("Try again!");
                                    });
                            }
                        }
                    }

                });
            });
        });

        $(document).ready(function() {
            $(".Delete").click(function(e) {

                var link = $(e.target);
                var baseUrl = "@Url.Action("Delete", "Jobs")/";
                bootbox.dialog({
                    title: "Confirm",
                    message: "Are you sure you want to delete this job?",
                    buttons: {
                        no: {
                            label: 'No',
                            className: 'btn-default',
                            callback: function() {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: 'Yes',
                            className: 'btn-danger',
                            callback: function() {
                                $.ajax({
                                        url: baseUrl + link.attr("data-job-id"),
                                        method: "POST",
                                        async: true
                                    })
                                    .done(function() {
                                        link.closest("tr").fadeOut(function () {
                                            $(this).remove();
                                        });
                                    })
                                    .fail(function() {
                                        alert("Try again!");
                                    });
                            }
                        }
                    }

                });
            });
        });
    </script>
}

